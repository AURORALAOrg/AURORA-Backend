generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE   @map("active")
  INACTIVE @map("inactive")
}

enum QuestionType {
  MULTIPLE_CHOICE    @map("multiple_choice")
  SENTENCE_ORDERING  @map("sentence_ordering")
}

enum DifficultyLevel {
  BEGINNER     @map("beginner")
  INTERMEDIATE @map("intermediate")
  ADVANCED     @map("advanced")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  password       String
  isEmailVerified  Boolean @default(false)
  firstName      String?
  lastName       String?
  phoneNumber    String?
  profileImage   String?
  status        Status     @default(INACTIVE)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  wallet         Wallet?
}

model Wallet {
  id            String   @id @default(uuid())
  userId        String   @unique
  walletAddress String   @unique
  isVerified    Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  status        Status   @default(INACTIVE)
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WalletVerificationChallenge {
  id            String    @id @default(uuid())
  walletAddress String    @unique
  message       String
  nonce         String
  createdAt     DateTime  @default(now())
  expiresAt     DateTime
}

model Question {
  id           String   @id @default(uuid())
  content      Json     // Stores question, correctAnswer, wrongAnswers, and explanation
  metadata     Json     // Stores englishLevel, difficulty, category, subCategory, tags, and type
  gameMetadata Json     // Stores pointsValue, timeLimit, and difficultyMultiplier
  createdBy    String
  status       Status   @default(ACTIVE)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([createdBy])
  @@map("questions")
}

model SentenceOrdering {
  id           String   @id @default(uuid())
  content      Json     // Stores sentence, words, and explanation
  metadata     Json     // Stores englishLevel, difficulty, category, subCategory, tags, and type
  gameMetadata Json     // Stores pointsValue, timeLimit, and difficultyMultiplier
  createdBy    String
  status       Status   @default(ACTIVE)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([createdBy])
  @@map("sentence_orderings")
}